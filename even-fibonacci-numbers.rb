########################################################################
### Project Euler
###
### Problem 2: Even Fibonacci Numbers
### Implemented in Ruby
### Author: Tyler Funk <tfunk@fastmail.fm>
###
### Each new term in the Fibonacci sequence is generated by adding the
### previous two terms. By starting with 1 and 2, the first 10 terms will be:
###
###              1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
###
### By considering the terms in the Fibonacci sequence whose values do not
### exceed four million, find the sum of the even-valued terms.
###
#########################################################################

LIMIT = 4e6.to_i

def fib(prev, curr)
    if curr < LIMIT
        if curr.even?
            curr + fib(curr, prev + curr)
        else
            fib(curr, prev + curr)
        end
    else
        0
    end
end

puts fib(0, 1)